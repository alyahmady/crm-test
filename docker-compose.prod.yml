version: "3.9"

services:

  backend:
    restart: always
    container_name: crmtest_backend
    hostname: crmtest_backend
    build:
      context: ./
      dockerfile: ./deploy/dockerfiles/backend.dockerfile.prod
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - ./deploy/environments/backend.env
    expose:
      - 8000

  nginx:
    image: nginx:stable
    restart: unless-stopped
    container_name: crmtest_nginx
    hostname: crmtest_nginx
    env_file:
      - ./deploy/environments/nginx.env
    depends_on:
      - backend
    ports:
      # Replace `80` according to `NGINX_PORT` variable in `./deploy/environments/nginx.env`
      - "80:80"
    volumes:
      - ./deploy/config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deploy/config/nginx/conf.d:/etc/nginx/conf.d
      - ./deploy/config/nginx/templates:/etc/nginx/templates:ro
      - nginx-logs:/var/log/nginx

  redis:
    image: redis:7.0.11
    restart: unless-stopped
    container_name: crmtest_redis
    hostname: crmtest_redis
    env_file:
      - ./deploy/environments/redis.env
    expose:
      - 6379
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      retries: 10
      start_period: 5s
      timeout: 3s

  postgres:
    restart: unless-stopped
    container_name: crmtest_postgres
    hostname: crmtest_postgres
    build:
      context: ./
      dockerfile: ./deploy/dockerfiles/postgres.dockerfile.prod
    env_file:
      - ./deploy/environments/postgres.env
    expose:
      - 5432


volumes:
  redis-data:
  nginx-logs:
